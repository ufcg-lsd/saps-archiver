/* (C)2020 */
package saps.archiver.interfaces;

import java.io.FileNotFoundException;
import java.io.IOException;
import saps.common.core.model.SapsImage;

/**
 * Permanent Storage is responsible for permanently and securely storing the files generated by the
 * tasks and for allowing them to be accessed through links. The saved files are obtained from
 * temporary storage.
 */
public interface PermanentStorage {

  /**
   * Attempts to copy the files generated by a Task from temporary storage to permanent storage. The
   * name of the task directory is given by its ID and the task directory has three directories:
   * {@link PermanentStorageConstants#INPUTDOWNLOADING_DIR}, 
   * {@link PermanentStorageConstants#PREPROCESSING_DIR} and 
   * {@link PermanentStorageConstants#PROCESSING_DIR}.
   *
   * @param task The task that will have its data archived.
   * @return boolean representation, success (true) or failure (false) in to archive the three dirs.
   * @throws FileNotFoundException if the task directory not exists on temp storage
   * @throws IOException if failed on copy any file to permanent storage
   */
  boolean archive(SapsImage task) throws IOException;

  /**
   * This function delete all files from task in Permanent Storage.
   *
   * @param task The task that will have its data deleted.
   * @return String return the id of the deleted task
   * @throws IOException if failed on copy any file to permanent storage
   */
  String delete(SapsImage task) throws IOException;
}
